#Предположим, что мы хотим найти элемент в массиве (получить
#его индекс). Мы можем это сделать просто перебрав все элементы.
#Но что, если массив уже отсортирован? В этом случае можно
#использовать бинарный поиск. Принцип прост: сначала берём
#элемент находящийся посередине и сравниваем с тем, который мы
#хотим найти. Если центральный элемент больше нашего,
#рассматриваем массив слева от центрального, а если больше -
#справа и повторяем так до тех пор, пока не найдем наш элемент.
#● Ваша задача
#Написать программу на любом языке в любой парадигме для
#бинарного поиска. На вход подаётся целочисленный массив и
#число. На выходе - индекс элемента или -1, в случае если искомого
#элемента нет в массиве.


def binary_search(lst, search_item):
    low = 0
    high = len(lst) - 1
    search_res = -1

    while low <= high and search_res==-1:
        middle = (low + high) // 2
        guess = lst[middle]
        if guess == search_item:
            search_res = middle
        if guess > search_item:
            high = middle - 1
        else:
            low = middle + 1
    return search_res


lst = [1, 5, 16, 19, 25, 27, 43, 50, 78, 89, 90]
value = 5
lst.sort()
result = binary_search(lst, value)
if result!=-1:
    print("Элемент найден! Позиция элемента:", result)
else:
    print("Элемент не найден. Ответ:", result)